{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { TYPES } from \"./todos\";\nexport const TodoForm = props => {\n  const {\n    0: todo,\n    1: setTodo\n  } = useState(props.todo);\n  const {\n    0: types\n  } = useState(TYPES);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({\n    status: false\n  });\n\n  const formChangeHandler = event => {\n    const target = event.target;\n    const name = target.name;\n    let value;\n\n    switch (target.type) {\n      case \"checkbox\":\n        value = target.checked;\n        break;\n\n      default:\n        value = target.value;\n        break;\n    }\n\n    setTodo(_objectSpread({}, Object.assign(todo, {\n      [name]: value\n    })));\n  };\n\n  const updateTodoHandler = event => {\n    event.preventDefault();\n    setErrors({\n      status: false\n    });\n\n    if (!todo.name) {\n      setErrors(_objectSpread({}, Object.assign(errors, {\n        name: \"Name is required.\",\n        status: true\n      })));\n    }\n\n    if (!todo.description) {\n      setErrors(_objectSpread({}, Object.assign(errors, {\n        description: \"Description is required.\",\n        status: true\n      })));\n    }\n\n    if (!todo.type) {\n      setErrors(_objectSpread({}, Object.assign(errors, {\n        type: \"Type is required.\",\n        status: true\n      })));\n    }\n\n    if (!todo.date) {\n      setErrors(_objectSpread({}, Object.assign(errors, {\n        date: \"Date is required.\",\n        status: true\n      })));\n    }\n\n    setTimeout(() => {\n      if (!errors.status) {\n        props.onAddOrUpdate(todo);\n      } else {\n        alert(\"All Fields are required\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"h4\", {\n      children: [todo.id ? \"Update\" : \"Add\", \" Todo\"]\n    }), /*#__PURE__*/_jsx(\"form\", {\n      onSubmit: updateTodoHandler,\n      noValidate: true,\n      children: /*#__PURE__*/_jsx(\"table\", {\n        children: /*#__PURE__*/_jsxs(\"tbody\", {\n          children: [/*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsx(\"th\", {\n              align: \"left\",\n              children: /*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"name\",\n                children: \"Name\"\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: /*#__PURE__*/_jsx(\"input\", {\n                id: \"name\",\n                type: \"text\",\n                name: \"name\",\n                onChange: formChangeHandler,\n                value: todo.name,\n                required: true\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: errors.name\n            })]\n          }), /*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsx(\"th\", {\n              align: \"left\",\n              children: /*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"description\",\n                children: \"description\"\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: /*#__PURE__*/_jsx(\"textarea\", {\n                id: \"description\",\n                name: \"description\",\n                onChange: formChangeHandler,\n                value: todo.description,\n                required: true\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: errors.description\n            })]\n          }), /*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsx(\"th\", {\n              align: \"left\",\n              children: /*#__PURE__*/_jsx(\"label\", {\n                children: \"Type\"\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: /*#__PURE__*/_jsx(\"select\", {\n                id: \"type\",\n                name: \"type\",\n                onChange: formChangeHandler,\n                value: todo.type,\n                required: true,\n                children: types.map(type => /*#__PURE__*/_jsx(\"option\", {\n                  value: type,\n                  children: type\n                }, type))\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: errors.type\n            })]\n          }), /*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsx(\"th\", {\n              align: \"left\",\n              children: /*#__PURE__*/_jsx(\"label\", {\n                children: \"Confidential\"\n              })\n            }), /*#__PURE__*/_jsxs(\"td\", {\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"confidential1\",\n                children: \"Yes\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                id: \"confidential1\",\n                type: \"radio\",\n                name: \"confidential\",\n                value: \"Yes\",\n                onChange: formChangeHandler,\n                checked: todo.confidential === \"Yes\"\n              }), /*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"confidential2\",\n                children: \"No\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                id: \"confidential2\",\n                type: \"radio\",\n                name: \"confidential\",\n                value: \"No\",\n                onChange: formChangeHandler,\n                checked: todo.confidential === \"No\"\n              })]\n            }), /*#__PURE__*/_jsx(\"td\", {})]\n          }), /*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsx(\"th\", {\n              align: \"left\",\n              children: /*#__PURE__*/_jsx(\"label\", {\n                children: \"Remind\"\n              })\n            }), /*#__PURE__*/_jsxs(\"td\", {\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"remind\",\n                children: \"Yes\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                id: \"remind\",\n                type: \"checkbox\",\n                name: \"remind\",\n                onChange: formChangeHandler,\n                checked: todo.remind\n              })]\n            }), /*#__PURE__*/_jsx(\"td\", {})]\n          }), /*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsx(\"th\", {\n              align: \"left\",\n              children: /*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"date\",\n                children: \"Date\"\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: /*#__PURE__*/_jsx(\"input\", {\n                id: \"date\",\n                type: \"date\",\n                name: \"date\",\n                onChange: formChangeHandler,\n                value: todo.date,\n                required: true\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: errors.date\n            })]\n          }), /*#__PURE__*/_jsx(\"tr\", {\n            children: /*#__PURE__*/_jsx(\"th\", {\n              colSpan: 2,\n              align: \"right\",\n              children: /*#__PURE__*/_jsx(\"button\", {\n                type: \"submit\",\n                children: todo.id ? \"Update\" : \"Add\"\n              })\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default TodoForm;","map":null,"metadata":{},"sourceType":"module"}