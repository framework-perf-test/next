{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { TYPES } from \"./todos\";\nexport default class TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todo: props.todo,\n      types: TYPES,\n      errors: {\n        status: false\n      }\n    };\n    this.formChangeHandler = this.formChangeHandler.bind(this);\n    this.updateTodoHandler = this.updateTodoHandler.bind(this);\n  }\n\n  formChangeHandler(event) {\n    const target = event.target;\n    const name = target.name;\n    let value;\n\n    switch (target.type) {\n      case \"checkbox\":\n        value = target.checked;\n        break;\n\n      default:\n        value = target.value;\n        break;\n    }\n\n    this.setState(prevState => ({\n      todo: _objectSpread(_objectSpread({}, prevState.todo), {}, {\n        [name]: value\n      })\n    }));\n  }\n\n  updateTodoHandler(event) {\n    event.preventDefault();\n    this.setState({\n      errors: {\n        status: false\n      }\n    });\n\n    if (!this.state.todo.name) {\n      this.setState(prevState => ({\n        errors: _objectSpread(_objectSpread({}, prevState.errors), {}, {\n          name: \"Name is required.\",\n          status: true\n        })\n      }));\n    }\n\n    if (!this.state.todo.description) {\n      this.setState(prevState => ({\n        errors: _objectSpread(_objectSpread({}, prevState.errors), {}, {\n          description: \"Description is required.\",\n          status: true\n        })\n      }));\n    }\n\n    if (!this.state.todo.type) {\n      this.setState(prevState => ({\n        errors: _objectSpread(_objectSpread({}, prevState.errors), {}, {\n          type: \"Type is required.\",\n          status: true\n        })\n      }));\n    }\n\n    if (!this.state.todo.date) {\n      this.setState(prevState => ({\n        errors: _objectSpread(_objectSpread({}, prevState.errors), {}, {\n          date: \"Date is required.\",\n          status: true\n        })\n      }));\n    }\n\n    setTimeout(() => {\n      if (!this.state.errors.status) {\n        this.props.onAddOrUpdate(this.state.todo);\n      } else {\n        alert(\"All Fields are required\");\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(\"section\", {\n      children: [/*#__PURE__*/_jsxs(\"h4\", {\n        children: [this.state.todo.id ? \"Update\" : \"Add\", \" Todo\"]\n      }), /*#__PURE__*/_jsx(\"form\", {\n        onSubmit: this.updateTodoHandler,\n        noValidate: true,\n        children: /*#__PURE__*/_jsx(\"table\", {\n          children: /*#__PURE__*/_jsxs(\"tbody\", {\n            children: [/*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(\"th\", {\n                children: /*#__PURE__*/_jsx(\"label\", {\n                  htmlFor: \"name\",\n                  children: \"Name\"\n                })\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  id: \"name\",\n                  type: \"text\",\n                  name: \"name\",\n                  onChange: this.formChangeHandler,\n                  value: this.state.todo.name,\n                  required: true\n                })\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: this.state.errors.name\n              })]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(\"th\", {\n                children: /*#__PURE__*/_jsx(\"label\", {\n                  htmlFor: \"description\",\n                  children: \"description\"\n                })\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: /*#__PURE__*/_jsx(\"textarea\", {\n                  id: \"description\",\n                  name: \"description\",\n                  onChange: this.formChangeHandler,\n                  value: this.state.todo.description,\n                  required: true\n                })\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: this.state.errors.description\n              })]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(\"th\", {\n                children: /*#__PURE__*/_jsx(\"label\", {\n                  children: \"Type\"\n                })\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: /*#__PURE__*/_jsx(\"select\", {\n                  id: \"type\",\n                  name: \"type\",\n                  onChange: this.formChangeHandler,\n                  value: this.state.todo.type,\n                  required: true,\n                  children: this.state.types.map(type => /*#__PURE__*/_jsx(\"option\", {\n                    value: type,\n                    children: type\n                  }, type))\n                })\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: this.state.errors.type\n              })]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(\"th\", {\n                children: /*#__PURE__*/_jsx(\"label\", {\n                  children: \"Confidential\"\n                })\n              }), /*#__PURE__*/_jsxs(\"td\", {\n                children: [/*#__PURE__*/_jsx(\"label\", {\n                  htmlFor: \"confidential1\",\n                  children: \"Yes\"\n                }), /*#__PURE__*/_jsx(\"input\", {\n                  id: \"confidential1\",\n                  type: \"radio\",\n                  name: \"confidential\",\n                  value: \"Yes\",\n                  onChange: this.formChangeHandler,\n                  checked: this.state.todo.confidential === \"Yes\"\n                }), /*#__PURE__*/_jsx(\"label\", {\n                  htmlFor: \"confidential2\",\n                  children: \"No\"\n                }), /*#__PURE__*/_jsx(\"input\", {\n                  id: \"confidential2\",\n                  type: \"radio\",\n                  name: \"confidential\",\n                  value: \"No\",\n                  onChange: this.formChangeHandler,\n                  checked: this.state.todo.confidential === \"No\"\n                })]\n              }), /*#__PURE__*/_jsx(\"td\", {})]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(\"th\", {\n                align: \"left\",\n                children: /*#__PURE__*/_jsx(\"label\", {\n                  children: \"Remind\"\n                })\n              }), /*#__PURE__*/_jsxs(\"td\", {\n                children: [/*#__PURE__*/_jsx(\"label\", {\n                  htmlFor: \"remind\",\n                  children: \"Yes\"\n                }), /*#__PURE__*/_jsx(\"input\", {\n                  id: \"remind\",\n                  type: \"checkbox\",\n                  name: \"remind\",\n                  onChange: this.formChangeHandler,\n                  checked: this.state.todo.remind\n                })]\n              }), /*#__PURE__*/_jsx(\"td\", {})]\n            }), /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(\"th\", {\n                children: /*#__PURE__*/_jsx(\"label\", {\n                  htmlFor: \"date\",\n                  children: \"Date\"\n                })\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  id: \"date\",\n                  type: \"date\",\n                  name: \"date\",\n                  onChange: this.formChangeHandler,\n                  value: this.state.todo.date,\n                  required: true\n                })\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: this.state.errors.date\n              })]\n            }), /*#__PURE__*/_jsx(\"tr\", {\n              children: /*#__PURE__*/_jsx(\"th\", {\n                colSpan: 2,\n                align: \"right\",\n                children: /*#__PURE__*/_jsx(\"button\", {\n                  type: \"submit\",\n                  children: this.state.todo.id ? \"Update\" : \"Add\"\n                })\n              })\n            })]\n          })\n        })\n      })]\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}