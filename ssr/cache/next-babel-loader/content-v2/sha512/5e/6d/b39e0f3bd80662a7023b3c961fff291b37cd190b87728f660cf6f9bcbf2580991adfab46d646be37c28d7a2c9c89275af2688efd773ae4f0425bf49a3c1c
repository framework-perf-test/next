{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport { TYPES } from \"../lib/todos\";\nexport default class TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todo: props.todo,\n      types: TYPES\n    };\n  }\n\n  render() {\n    if (this.state.todo) {\n      return /*#__PURE__*/_jsxs(\"section\", {\n        children: [/*#__PURE__*/_jsxs(\"h4\", {\n          children: [this.state.todo.id ? \"Update\" : \"Add\", \" Todo\"]\n        }), /*#__PURE__*/_jsx(Formik, {\n          initialValues: _objectSpread({}, this.state.todo),\n          validate: values => {\n            const errors = {};\n\n            if (!values.name) {\n              errors.name = \"Name is Required\";\n            }\n\n            if (!values.description) {\n              errors.description = \"Description is Required\";\n            }\n\n            if (!values.type) {\n              errors.type = \"Type is Required\";\n            }\n\n            if (!values.date) {\n              errors.date = \"Date is Required\";\n            }\n\n            return errors;\n          },\n          onSubmit: values => {\n            this.setState({\n              todo: values\n            });\n            this.props.onAddOrUpdate(this.state.todo);\n          },\n          children: ({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleSubmit\n          }) => /*#__PURE__*/_jsx(\"form\", {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsx(\"table\", {\n              children: /*#__PURE__*/_jsxs(\"tbody\", {\n                children: [/*#__PURE__*/_jsxs(\"tr\", {\n                  children: [/*#__PURE__*/_jsx(\"th\", {\n                    children: /*#__PURE__*/_jsx(\"label\", {\n                      htmlFor: \"name\",\n                      children: \"Name\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"td\", {\n                    children: /*#__PURE__*/_jsx(\"input\", {\n                      id: \"name\",\n                      type: \"text\",\n                      name: \"name\",\n                      onChange: handleChange,\n                      value: values.name,\n                      required: true\n                    })\n                  }), /*#__PURE__*/_jsx(\"td\", {\n                    children: errors.name\n                  })]\n                }), /*#__PURE__*/_jsxs(\"tr\", {\n                  children: [/*#__PURE__*/_jsx(\"th\", {\n                    children: /*#__PURE__*/_jsx(\"label\", {\n                      htmlFor: \"description\",\n                      children: \"description\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"td\", {\n                    children: /*#__PURE__*/_jsx(\"textarea\", {\n                      id: \"description\",\n                      name: \"description\",\n                      onChange: handleChange,\n                      value: values.description,\n                      required: true\n                    })\n                  }), /*#__PURE__*/_jsx(\"td\", {\n                    children: errors.description\n                  })]\n                }), /*#__PURE__*/_jsxs(\"tr\", {\n                  children: [/*#__PURE__*/_jsx(\"th\", {\n                    children: /*#__PURE__*/_jsx(\"label\", {\n                      children: \"Type\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"td\", {\n                    children: /*#__PURE__*/_jsx(\"select\", {\n                      id: \"type\",\n                      name: \"type\",\n                      onChange: handleChange,\n                      value: values.type,\n                      required: true,\n                      children: this.state.types.map(type => /*#__PURE__*/_jsx(\"option\", {\n                        value: type,\n                        children: type\n                      }, type))\n                    })\n                  }), /*#__PURE__*/_jsx(\"td\", {\n                    children: errors.type\n                  })]\n                }), /*#__PURE__*/_jsxs(\"tr\", {\n                  children: [/*#__PURE__*/_jsx(\"th\", {\n                    children: /*#__PURE__*/_jsx(\"label\", {\n                      children: \"Confidential\"\n                    })\n                  }), /*#__PURE__*/_jsxs(\"td\", {\n                    children: [/*#__PURE__*/_jsx(\"label\", {\n                      htmlFor: \"confidential1\",\n                      children: \"Yes\"\n                    }), /*#__PURE__*/_jsx(\"input\", {\n                      id: \"confidential1\",\n                      type: \"radio\",\n                      name: \"confidential\",\n                      value: \"Yes\",\n                      onChange: handleChange,\n                      checked: values.confidential === \"Yes\"\n                    }), /*#__PURE__*/_jsx(\"label\", {\n                      htmlFor: \"confidential2\",\n                      children: \"No\"\n                    }), /*#__PURE__*/_jsx(\"input\", {\n                      id: \"confidential2\",\n                      type: \"radio\",\n                      name: \"confidential\",\n                      value: \"No\",\n                      onChange: handleChange,\n                      checked: values.confidential === \"No\"\n                    })]\n                  }), /*#__PURE__*/_jsx(\"td\", {})]\n                }), /*#__PURE__*/_jsxs(\"tr\", {\n                  children: [/*#__PURE__*/_jsx(\"th\", {\n                    align: \"left\",\n                    children: /*#__PURE__*/_jsx(\"label\", {\n                      children: \"Remind\"\n                    })\n                  }), /*#__PURE__*/_jsxs(\"td\", {\n                    children: [/*#__PURE__*/_jsx(\"label\", {\n                      htmlFor: \"remind\",\n                      children: \"Yes\"\n                    }), /*#__PURE__*/_jsx(\"input\", {\n                      id: \"remind\",\n                      type: \"checkbox\",\n                      name: \"remind\",\n                      onChange: handleChange,\n                      checked: values.remind\n                    })]\n                  }), /*#__PURE__*/_jsx(\"td\", {\n                    children: errors.remind\n                  })]\n                }), /*#__PURE__*/_jsxs(\"tr\", {\n                  children: [/*#__PURE__*/_jsx(\"th\", {\n                    children: /*#__PURE__*/_jsx(\"label\", {\n                      htmlFor: \"date\",\n                      children: \"Date\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"td\", {\n                    children: /*#__PURE__*/_jsx(\"input\", {\n                      id: \"date\",\n                      type: \"date\",\n                      name: \"date\",\n                      onChange: handleChange,\n                      value: values.date,\n                      required: true\n                    })\n                  }), /*#__PURE__*/_jsx(\"td\", {\n                    children: errors.date\n                  })]\n                }), /*#__PURE__*/_jsx(\"tr\", {\n                  children: /*#__PURE__*/_jsx(\"th\", {\n                    colSpan: 2,\n                    align: \"right\",\n                    children: /*#__PURE__*/_jsx(\"button\", {\n                      type: \"submit\",\n                      children: values.id ? \"Update\" : \"Add\"\n                    })\n                  })\n                })]\n              })\n            })\n          })\n        })]\n      });\n    } else {\n      return;\n    }\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}