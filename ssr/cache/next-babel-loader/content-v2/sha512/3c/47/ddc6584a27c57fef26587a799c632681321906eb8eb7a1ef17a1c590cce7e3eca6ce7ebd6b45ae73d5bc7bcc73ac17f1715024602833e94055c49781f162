{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/home/runner/work/next/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _classCallCheck from \"/home/runner/work/next/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/runner/work/next/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/runner/work/next/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/runner/work/next/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/runner/work/next/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport { TYPES } from \"../lib/todos\";\n\nvar TodoForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(TodoForm, _React$Component);\n\n  var _super = _createSuper(TodoForm);\n\n  function TodoForm(props) {\n    var _this;\n\n    _classCallCheck(this, TodoForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      todo: props.todo,\n      types: TYPES\n    };\n    return _this;\n  }\n\n  _createClass(TodoForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.todo) {\n        return /*#__PURE__*/_jsxs(\"section\", {\n          children: [/*#__PURE__*/_jsxs(\"h4\", {\n            children: [this.state.todo.id ? \"Update\" : \"Add\", \" Todo\"]\n          }), /*#__PURE__*/_jsx(Formik, {\n            initialValues: _objectSpread({}, this.state.todo),\n            validate: function validate(values) {\n              var errors = {};\n\n              if (!values.name) {\n                errors.name = \"Name is Required\";\n              }\n\n              if (!values.description) {\n                errors.description = \"Description is Required\";\n              }\n\n              if (!values.type) {\n                errors.type = \"Type is Required\";\n              }\n\n              if (!values.date) {\n                errors.date = \"Date is Required\";\n              }\n\n              return errors;\n            },\n            onSubmit: function onSubmit(values) {\n              _this2.setState({\n                todo: values\n              });\n\n              _this2.props.onAddOrUpdate(_this2.state.todo);\n            },\n            children: function children(_ref) {\n              var values = _ref.values,\n                  errors = _ref.errors,\n                  touched = _ref.touched,\n                  handleChange = _ref.handleChange,\n                  handleSubmit = _ref.handleSubmit;\n              return /*#__PURE__*/_jsx(\"form\", {\n                onSubmit: handleSubmit,\n                children: /*#__PURE__*/_jsx(\"table\", {\n                  children: /*#__PURE__*/_jsxs(\"tbody\", {\n                    children: [/*#__PURE__*/_jsxs(\"tr\", {\n                      children: [/*#__PURE__*/_jsx(\"th\", {\n                        children: /*#__PURE__*/_jsx(\"label\", {\n                          htmlFor: \"name\",\n                          children: \"Name\"\n                        })\n                      }), /*#__PURE__*/_jsx(\"td\", {\n                        children: /*#__PURE__*/_jsx(\"input\", {\n                          id: \"name\",\n                          type: \"text\",\n                          name: \"name\",\n                          onChange: handleChange,\n                          value: values.name,\n                          required: true\n                        })\n                      }), /*#__PURE__*/_jsx(\"td\", {\n                        children: errors.name\n                      })]\n                    }), /*#__PURE__*/_jsxs(\"tr\", {\n                      children: [/*#__PURE__*/_jsx(\"th\", {\n                        children: /*#__PURE__*/_jsx(\"label\", {\n                          htmlFor: \"description\",\n                          children: \"description\"\n                        })\n                      }), /*#__PURE__*/_jsx(\"td\", {\n                        children: /*#__PURE__*/_jsx(\"textarea\", {\n                          id: \"description\",\n                          name: \"description\",\n                          onChange: handleChange,\n                          value: values.description,\n                          required: true\n                        })\n                      }), /*#__PURE__*/_jsx(\"td\", {\n                        children: errors.description\n                      })]\n                    }), /*#__PURE__*/_jsxs(\"tr\", {\n                      children: [/*#__PURE__*/_jsx(\"th\", {\n                        children: /*#__PURE__*/_jsx(\"label\", {\n                          children: \"Type\"\n                        })\n                      }), /*#__PURE__*/_jsx(\"td\", {\n                        children: /*#__PURE__*/_jsx(\"select\", {\n                          id: \"type\",\n                          name: \"type\",\n                          onChange: handleChange,\n                          value: values.type,\n                          required: true,\n                          children: _this2.state.types.map(function (type) {\n                            return /*#__PURE__*/_jsx(\"option\", {\n                              value: type,\n                              children: type\n                            }, type);\n                          })\n                        })\n                      }), /*#__PURE__*/_jsx(\"td\", {\n                        children: errors.type\n                      })]\n                    }), /*#__PURE__*/_jsxs(\"tr\", {\n                      children: [/*#__PURE__*/_jsx(\"th\", {\n                        children: /*#__PURE__*/_jsx(\"label\", {\n                          children: \"Confidential\"\n                        })\n                      }), /*#__PURE__*/_jsxs(\"td\", {\n                        children: [/*#__PURE__*/_jsx(\"label\", {\n                          htmlFor: \"confidential1\",\n                          children: \"Yes\"\n                        }), /*#__PURE__*/_jsx(\"input\", {\n                          id: \"confidential1\",\n                          type: \"radio\",\n                          name: \"confidential\",\n                          value: \"Yes\",\n                          onChange: handleChange,\n                          checked: values.confidential === \"Yes\"\n                        }), /*#__PURE__*/_jsx(\"label\", {\n                          htmlFor: \"confidential2\",\n                          children: \"No\"\n                        }), /*#__PURE__*/_jsx(\"input\", {\n                          id: \"confidential2\",\n                          type: \"radio\",\n                          name: \"confidential\",\n                          value: \"No\",\n                          onChange: handleChange,\n                          checked: values.confidential === \"No\"\n                        })]\n                      }), /*#__PURE__*/_jsx(\"td\", {})]\n                    }), /*#__PURE__*/_jsxs(\"tr\", {\n                      children: [/*#__PURE__*/_jsx(\"th\", {\n                        align: \"left\",\n                        children: /*#__PURE__*/_jsx(\"label\", {\n                          children: \"Remind\"\n                        })\n                      }), /*#__PURE__*/_jsxs(\"td\", {\n                        children: [/*#__PURE__*/_jsx(\"label\", {\n                          htmlFor: \"remind\",\n                          children: \"Yes\"\n                        }), /*#__PURE__*/_jsx(\"input\", {\n                          id: \"remind\",\n                          type: \"checkbox\",\n                          name: \"remind\",\n                          onChange: handleChange,\n                          checked: values.remind\n                        })]\n                      }), /*#__PURE__*/_jsx(\"td\", {\n                        children: errors.remind\n                      })]\n                    }), /*#__PURE__*/_jsxs(\"tr\", {\n                      children: [/*#__PURE__*/_jsx(\"th\", {\n                        children: /*#__PURE__*/_jsx(\"label\", {\n                          htmlFor: \"date\",\n                          children: \"Date\"\n                        })\n                      }), /*#__PURE__*/_jsx(\"td\", {\n                        children: /*#__PURE__*/_jsx(\"input\", {\n                          id: \"date\",\n                          type: \"date\",\n                          name: \"date\",\n                          onChange: handleChange,\n                          value: values.date,\n                          required: true\n                        })\n                      }), /*#__PURE__*/_jsx(\"td\", {\n                        children: errors.date\n                      })]\n                    }), /*#__PURE__*/_jsx(\"tr\", {\n                      children: /*#__PURE__*/_jsx(\"th\", {\n                        colSpan: 2,\n                        align: \"right\",\n                        children: /*#__PURE__*/_jsx(\"button\", {\n                          type: \"submit\",\n                          children: values.id ? \"Update\" : \"Add\"\n                        })\n                      })\n                    })]\n                  })\n                })\n              });\n            }\n          })]\n        });\n      } else {\n        return;\n      }\n    }\n  }]);\n\n  return TodoForm;\n}(React.Component);\n\nexport { TodoForm as default };","map":null,"metadata":{},"sourceType":"module"}